// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Home /> render 1`] = `
<ReduxWrapper>
  <Provider
    store={
      Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      }
    }
  >
    <Home>
      <WithStyles(ForwardRef(Grid))
        alignItems="center"
        className="makeStyles-root-1"
        container={true}
        direction="column"
        justify="space-around"
        spacing={2}
      >
        <ForwardRef(Grid)
          alignItems="center"
          className="makeStyles-root-1"
          classes={
            Object {
              "align-content-xs-center": "MuiGrid-align-content-xs-center",
              "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
              "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
              "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
              "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
              "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
              "align-items-xs-center": "MuiGrid-align-items-xs-center",
              "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
              "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
              "container": "MuiGrid-container",
              "direction-xs-column": "MuiGrid-direction-xs-column",
              "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
              "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
              "grid-lg-1": "MuiGrid-grid-lg-1",
              "grid-lg-10": "MuiGrid-grid-lg-10",
              "grid-lg-11": "MuiGrid-grid-lg-11",
              "grid-lg-12": "MuiGrid-grid-lg-12",
              "grid-lg-2": "MuiGrid-grid-lg-2",
              "grid-lg-3": "MuiGrid-grid-lg-3",
              "grid-lg-4": "MuiGrid-grid-lg-4",
              "grid-lg-5": "MuiGrid-grid-lg-5",
              "grid-lg-6": "MuiGrid-grid-lg-6",
              "grid-lg-7": "MuiGrid-grid-lg-7",
              "grid-lg-8": "MuiGrid-grid-lg-8",
              "grid-lg-9": "MuiGrid-grid-lg-9",
              "grid-lg-auto": "MuiGrid-grid-lg-auto",
              "grid-lg-true": "MuiGrid-grid-lg-true",
              "grid-md-1": "MuiGrid-grid-md-1",
              "grid-md-10": "MuiGrid-grid-md-10",
              "grid-md-11": "MuiGrid-grid-md-11",
              "grid-md-12": "MuiGrid-grid-md-12",
              "grid-md-2": "MuiGrid-grid-md-2",
              "grid-md-3": "MuiGrid-grid-md-3",
              "grid-md-4": "MuiGrid-grid-md-4",
              "grid-md-5": "MuiGrid-grid-md-5",
              "grid-md-6": "MuiGrid-grid-md-6",
              "grid-md-7": "MuiGrid-grid-md-7",
              "grid-md-8": "MuiGrid-grid-md-8",
              "grid-md-9": "MuiGrid-grid-md-9",
              "grid-md-auto": "MuiGrid-grid-md-auto",
              "grid-md-true": "MuiGrid-grid-md-true",
              "grid-sm-1": "MuiGrid-grid-sm-1",
              "grid-sm-10": "MuiGrid-grid-sm-10",
              "grid-sm-11": "MuiGrid-grid-sm-11",
              "grid-sm-12": "MuiGrid-grid-sm-12",
              "grid-sm-2": "MuiGrid-grid-sm-2",
              "grid-sm-3": "MuiGrid-grid-sm-3",
              "grid-sm-4": "MuiGrid-grid-sm-4",
              "grid-sm-5": "MuiGrid-grid-sm-5",
              "grid-sm-6": "MuiGrid-grid-sm-6",
              "grid-sm-7": "MuiGrid-grid-sm-7",
              "grid-sm-8": "MuiGrid-grid-sm-8",
              "grid-sm-9": "MuiGrid-grid-sm-9",
              "grid-sm-auto": "MuiGrid-grid-sm-auto",
              "grid-sm-true": "MuiGrid-grid-sm-true",
              "grid-xl-1": "MuiGrid-grid-xl-1",
              "grid-xl-10": "MuiGrid-grid-xl-10",
              "grid-xl-11": "MuiGrid-grid-xl-11",
              "grid-xl-12": "MuiGrid-grid-xl-12",
              "grid-xl-2": "MuiGrid-grid-xl-2",
              "grid-xl-3": "MuiGrid-grid-xl-3",
              "grid-xl-4": "MuiGrid-grid-xl-4",
              "grid-xl-5": "MuiGrid-grid-xl-5",
              "grid-xl-6": "MuiGrid-grid-xl-6",
              "grid-xl-7": "MuiGrid-grid-xl-7",
              "grid-xl-8": "MuiGrid-grid-xl-8",
              "grid-xl-9": "MuiGrid-grid-xl-9",
              "grid-xl-auto": "MuiGrid-grid-xl-auto",
              "grid-xl-true": "MuiGrid-grid-xl-true",
              "grid-xs-1": "MuiGrid-grid-xs-1",
              "grid-xs-10": "MuiGrid-grid-xs-10",
              "grid-xs-11": "MuiGrid-grid-xs-11",
              "grid-xs-12": "MuiGrid-grid-xs-12",
              "grid-xs-2": "MuiGrid-grid-xs-2",
              "grid-xs-3": "MuiGrid-grid-xs-3",
              "grid-xs-4": "MuiGrid-grid-xs-4",
              "grid-xs-5": "MuiGrid-grid-xs-5",
              "grid-xs-6": "MuiGrid-grid-xs-6",
              "grid-xs-7": "MuiGrid-grid-xs-7",
              "grid-xs-8": "MuiGrid-grid-xs-8",
              "grid-xs-9": "MuiGrid-grid-xs-9",
              "grid-xs-auto": "MuiGrid-grid-xs-auto",
              "grid-xs-true": "MuiGrid-grid-xs-true",
              "item": "MuiGrid-item",
              "justify-xs-center": "MuiGrid-justify-xs-center",
              "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
              "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
              "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
              "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
              "root": "MuiGrid-root",
              "spacing-xs-1": "MuiGrid-spacing-xs-1",
              "spacing-xs-10": "MuiGrid-spacing-xs-10",
              "spacing-xs-2": "MuiGrid-spacing-xs-2",
              "spacing-xs-3": "MuiGrid-spacing-xs-3",
              "spacing-xs-4": "MuiGrid-spacing-xs-4",
              "spacing-xs-5": "MuiGrid-spacing-xs-5",
              "spacing-xs-6": "MuiGrid-spacing-xs-6",
              "spacing-xs-7": "MuiGrid-spacing-xs-7",
              "spacing-xs-8": "MuiGrid-spacing-xs-8",
              "spacing-xs-9": "MuiGrid-spacing-xs-9",
              "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
              "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
              "zeroMinWidth": "MuiGrid-zeroMinWidth",
            }
          }
          container={true}
          direction="column"
          justify="space-around"
          spacing={2}
        >
          <div
            className="MuiGrid-root makeStyles-root-1 MuiGrid-container MuiGrid-spacing-xs-2 MuiGrid-direction-xs-column MuiGrid-align-items-xs-center MuiGrid-justify-xs-space-around"
          >
            <WithStyles(ForwardRef(Typography))
              noWrap={true}
              variant="h6"
            >
              <ForwardRef(Typography)
                classes={
                  Object {
                    "alignCenter": "MuiTypography-alignCenter",
                    "alignJustify": "MuiTypography-alignJustify",
                    "alignLeft": "MuiTypography-alignLeft",
                    "alignRight": "MuiTypography-alignRight",
                    "body1": "MuiTypography-body1",
                    "body2": "MuiTypography-body2",
                    "button": "MuiTypography-button",
                    "caption": "MuiTypography-caption",
                    "colorError": "MuiTypography-colorError",
                    "colorInherit": "MuiTypography-colorInherit",
                    "colorPrimary": "MuiTypography-colorPrimary",
                    "colorSecondary": "MuiTypography-colorSecondary",
                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                    "displayBlock": "MuiTypography-displayBlock",
                    "displayInline": "MuiTypography-displayInline",
                    "gutterBottom": "MuiTypography-gutterBottom",
                    "h1": "MuiTypography-h1",
                    "h2": "MuiTypography-h2",
                    "h3": "MuiTypography-h3",
                    "h4": "MuiTypography-h4",
                    "h5": "MuiTypography-h5",
                    "h6": "MuiTypography-h6",
                    "noWrap": "MuiTypography-noWrap",
                    "overline": "MuiTypography-overline",
                    "paragraph": "MuiTypography-paragraph",
                    "root": "MuiTypography-root",
                    "srOnly": "MuiTypography-srOnly",
                    "subtitle1": "MuiTypography-subtitle1",
                    "subtitle2": "MuiTypography-subtitle2",
                  }
                }
                noWrap={true}
                variant="h6"
              >
                <h6
                  className="MuiTypography-root MuiTypography-h6 MuiTypography-noWrap"
                >
                  Choose your city1
                </h6>
              </ForwardRef(Typography)>
            </WithStyles(ForwardRef(Typography))>
            <WithStyles(ForwardRef(FormControl))
              className="makeStyles-selectFormControl-2"
              variant="outlined"
            >
              <ForwardRef(FormControl)
                className="makeStyles-selectFormControl-2"
                classes={
                  Object {
                    "fullWidth": "MuiFormControl-fullWidth",
                    "marginDense": "MuiFormControl-marginDense",
                    "marginNormal": "MuiFormControl-marginNormal",
                    "root": "MuiFormControl-root",
                  }
                }
                variant="outlined"
              >
                <div
                  className="MuiFormControl-root makeStyles-selectFormControl-2"
                >
                  <WithStyles(ForwardRef(Select))
                    data-testid="select-city"
                    id="demo-simple-select"
                    labelId="demo-simple-select-label"
                    onChange={[Function]}
                    required={true}
                    value=""
                  >
                    <ForwardRef(Select)
                      classes={
                        Object {
                          "disabled": "Mui-disabled",
                          "filled": "MuiSelect-filled",
                          "icon": "MuiSelect-icon",
                          "iconFilled": "MuiSelect-iconFilled",
                          "iconOpen": "MuiSelect-iconOpen",
                          "iconOutlined": "MuiSelect-iconOutlined",
                          "nativeInput": "MuiSelect-nativeInput",
                          "outlined": "MuiSelect-outlined",
                          "root": "MuiSelect-root",
                          "select": "MuiSelect-select",
                          "selectMenu": "MuiSelect-selectMenu",
                        }
                      }
                      data-testid="select-city"
                      id="demo-simple-select"
                      labelId="demo-simple-select-label"
                      onChange={[Function]}
                      required={true}
                      value=""
                    >
                      <WithStyles(ForwardRef(OutlinedInput))
                        data-testid="select-city"
                        inputComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "propTypes": Object {
                              "IconComponent": [Function],
                              "MenuProps": [Function],
                              "SelectDisplayProps": [Function],
                              "aria-label": [Function],
                              "autoFocus": [Function],
                              "autoWidth": [Function],
                              "children": [Function],
                              "className": [Function],
                              "classes": [Function],
                              "defaultValue": [Function],
                              "disabled": [Function],
                              "displayEmpty": [Function],
                              "inputRef": [Function],
                              "labelId": [Function],
                              "multiple": [Function],
                              "name": [Function],
                              "onBlur": [Function],
                              "onChange": [Function],
                              "onClose": [Function],
                              "onFocus": [Function],
                              "onOpen": [Function],
                              "open": [Function],
                              "readOnly": [Function],
                              "renderValue": [Function],
                              "tabIndex": [Function],
                              "type": [Function],
                              "value": [Function],
                              "variant": [Function],
                            },
                            "render": [Function],
                          }
                        }
                        inputProps={
                          Object {
                            "IconComponent": Object {
                              "$$typeof": Symbol(react.memo),
                              "compare": null,
                              "type": Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "render": [Function],
                              },
                            },
                            "MenuProps": undefined,
                            "SelectDisplayProps": Object {
                              "id": "demo-simple-select",
                            },
                            "autoWidth": false,
                            "children": Array [
                              <ForwardRef(WithStyles(ForwardRef(MenuItem)))
                                value="Bengaluru"
                              >
                                Bengaluru
                              </ForwardRef(WithStyles(ForwardRef(MenuItem)))>,
                              <ForwardRef(WithStyles(ForwardRef(MenuItem)))
                                value="Gurgaon"
                              >
                                Gurgaon
                              </ForwardRef(WithStyles(ForwardRef(MenuItem)))>,
                              <ForwardRef(WithStyles(ForwardRef(MenuItem)))
                                value="London"
                              >
                                London
                              </ForwardRef(WithStyles(ForwardRef(MenuItem)))>,
                              <ForwardRef(WithStyles(ForwardRef(MenuItem)))
                                value="New York"
                              >
                                New York
                              </ForwardRef(WithStyles(ForwardRef(MenuItem)))>,
                            ],
                            "classes": Object {
                              "disabled": "Mui-disabled",
                              "filled": "MuiSelect-filled",
                              "icon": "MuiSelect-icon",
                              "iconFilled": "MuiSelect-iconFilled",
                              "iconOpen": "MuiSelect-iconOpen",
                              "iconOutlined": "MuiSelect-iconOutlined",
                              "nativeInput": "MuiSelect-nativeInput",
                              "outlined": "MuiSelect-outlined",
                              "root": "MuiSelect-root",
                              "select": "MuiSelect-select",
                              "selectMenu": "MuiSelect-selectMenu",
                            },
                            "displayEmpty": false,
                            "labelId": "demo-simple-select-label",
                            "multiple": false,
                            "onClose": undefined,
                            "onOpen": undefined,
                            "open": undefined,
                            "renderValue": undefined,
                            "type": undefined,
                            "variant": "outlined",
                          }
                        }
                        labelWidth={0}
                        onChange={[Function]}
                        required={true}
                        value=""
                      >
                        <ForwardRef(OutlinedInput)
                          classes={
                            Object {
                              "adornedEnd": "MuiOutlinedInput-adornedEnd",
                              "adornedStart": "MuiOutlinedInput-adornedStart",
                              "colorSecondary": "MuiOutlinedInput-colorSecondary",
                              "disabled": "Mui-disabled",
                              "error": "Mui-error",
                              "focused": "Mui-focused",
                              "input": "MuiOutlinedInput-input",
                              "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                              "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                              "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                              "inputMultiline": "MuiOutlinedInput-inputMultiline",
                              "marginDense": "MuiOutlinedInput-marginDense",
                              "multiline": "MuiOutlinedInput-multiline",
                              "notchedOutline": "MuiOutlinedInput-notchedOutline",
                              "root": "MuiOutlinedInput-root",
                            }
                          }
                          data-testid="select-city"
                          inputComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "propTypes": Object {
                                "IconComponent": [Function],
                                "MenuProps": [Function],
                                "SelectDisplayProps": [Function],
                                "aria-label": [Function],
                                "autoFocus": [Function],
                                "autoWidth": [Function],
                                "children": [Function],
                                "className": [Function],
                                "classes": [Function],
                                "defaultValue": [Function],
                                "disabled": [Function],
                                "displayEmpty": [Function],
                                "inputRef": [Function],
                                "labelId": [Function],
                                "multiple": [Function],
                                "name": [Function],
                                "onBlur": [Function],
                                "onChange": [Function],
                                "onClose": [Function],
                                "onFocus": [Function],
                                "onOpen": [Function],
                                "open": [Function],
                                "readOnly": [Function],
                                "renderValue": [Function],
                                "tabIndex": [Function],
                                "type": [Function],
                                "value": [Function],
                                "variant": [Function],
                              },
                              "render": [Function],
                            }
                          }
                          inputProps={
                            Object {
                              "IconComponent": Object {
                                "$$typeof": Symbol(react.memo),
                                "compare": null,
                                "type": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "render": [Function],
                                },
                              },
                              "MenuProps": undefined,
                              "SelectDisplayProps": Object {
                                "id": "demo-simple-select",
                              },
                              "autoWidth": false,
                              "children": Array [
                                <ForwardRef(WithStyles(ForwardRef(MenuItem)))
                                  value="Bengaluru"
                                >
                                  Bengaluru
                                </ForwardRef(WithStyles(ForwardRef(MenuItem)))>,
                                <ForwardRef(WithStyles(ForwardRef(MenuItem)))
                                  value="Gurgaon"
                                >
                                  Gurgaon
                                </ForwardRef(WithStyles(ForwardRef(MenuItem)))>,
                                <ForwardRef(WithStyles(ForwardRef(MenuItem)))
                                  value="London"
                                >
                                  London
                                </ForwardRef(WithStyles(ForwardRef(MenuItem)))>,
                                <ForwardRef(WithStyles(ForwardRef(MenuItem)))
                                  value="New York"
                                >
                                  New York
                                </ForwardRef(WithStyles(ForwardRef(MenuItem)))>,
                              ],
                              "classes": Object {
                                "disabled": "Mui-disabled",
                                "filled": "MuiSelect-filled",
                                "icon": "MuiSelect-icon",
                                "iconFilled": "MuiSelect-iconFilled",
                                "iconOpen": "MuiSelect-iconOpen",
                                "iconOutlined": "MuiSelect-iconOutlined",
                                "nativeInput": "MuiSelect-nativeInput",
                                "outlined": "MuiSelect-outlined",
                                "root": "MuiSelect-root",
                                "select": "MuiSelect-select",
                                "selectMenu": "MuiSelect-selectMenu",
                              },
                              "displayEmpty": false,
                              "labelId": "demo-simple-select-label",
                              "multiple": false,
                              "onClose": undefined,
                              "onOpen": undefined,
                              "open": undefined,
                              "renderValue": undefined,
                              "type": undefined,
                              "variant": "outlined",
                            }
                          }
                          labelWidth={0}
                          onChange={[Function]}
                          required={true}
                          value=""
                        >
                          <WithStyles(ForwardRef(InputBase))
                            classes={
                              Object {
                                "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                "adornedStart": "MuiOutlinedInput-adornedStart",
                                "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                "disabled": "Mui-disabled",
                                "error": "Mui-error",
                                "focused": "Mui-focused",
                                "input": "MuiOutlinedInput-input",
                                "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                "marginDense": "MuiOutlinedInput-marginDense",
                                "multiline": "MuiOutlinedInput-multiline",
                                "notchedOutline": null,
                                "root": "MuiOutlinedInput-root",
                              }
                            }
                            data-testid="select-city"
                            fullWidth={false}
                            inputComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "propTypes": Object {
                                  "IconComponent": [Function],
                                  "MenuProps": [Function],
                                  "SelectDisplayProps": [Function],
                                  "aria-label": [Function],
                                  "autoFocus": [Function],
                                  "autoWidth": [Function],
                                  "children": [Function],
                                  "className": [Function],
                                  "classes": [Function],
                                  "defaultValue": [Function],
                                  "disabled": [Function],
                                  "displayEmpty": [Function],
                                  "inputRef": [Function],
                                  "labelId": [Function],
                                  "multiple": [Function],
                                  "name": [Function],
                                  "onBlur": [Function],
                                  "onChange": [Function],
                                  "onClose": [Function],
                                  "onFocus": [Function],
                                  "onOpen": [Function],
                                  "open": [Function],
                                  "readOnly": [Function],
                                  "renderValue": [Function],
                                  "tabIndex": [Function],
                                  "type": [Function],
                                  "value": [Function],
                                  "variant": [Function],
                                },
                                "render": [Function],
                              }
                            }
                            inputProps={
                              Object {
                                "IconComponent": Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                },
                                "MenuProps": undefined,
                                "SelectDisplayProps": Object {
                                  "id": "demo-simple-select",
                                },
                                "autoWidth": false,
                                "children": Array [
                                  <ForwardRef(WithStyles(ForwardRef(MenuItem)))
                                    value="Bengaluru"
                                  >
                                    Bengaluru
                                  </ForwardRef(WithStyles(ForwardRef(MenuItem)))>,
                                  <ForwardRef(WithStyles(ForwardRef(MenuItem)))
                                    value="Gurgaon"
                                  >
                                    Gurgaon
                                  </ForwardRef(WithStyles(ForwardRef(MenuItem)))>,
                                  <ForwardRef(WithStyles(ForwardRef(MenuItem)))
                                    value="London"
                                  >
                                    London
                                  </ForwardRef(WithStyles(ForwardRef(MenuItem)))>,
                                  <ForwardRef(WithStyles(ForwardRef(MenuItem)))
                                    value="New York"
                                  >
                                    New York
                                  </ForwardRef(WithStyles(ForwardRef(MenuItem)))>,
                                ],
                                "classes": Object {
                                  "disabled": "Mui-disabled",
                                  "filled": "MuiSelect-filled",
                                  "icon": "MuiSelect-icon",
                                  "iconFilled": "MuiSelect-iconFilled",
                                  "iconOpen": "MuiSelect-iconOpen",
                                  "iconOutlined": "MuiSelect-iconOutlined",
                                  "nativeInput": "MuiSelect-nativeInput",
                                  "outlined": "MuiSelect-outlined",
                                  "root": "MuiSelect-root",
                                  "select": "MuiSelect-select",
                                  "selectMenu": "MuiSelect-selectMenu",
                                },
                                "displayEmpty": false,
                                "labelId": "demo-simple-select-label",
                                "multiple": false,
                                "onClose": undefined,
                                "onOpen": undefined,
                                "open": undefined,
                                "renderValue": undefined,
                                "type": undefined,
                                "variant": "outlined",
                              }
                            }
                            multiline={false}
                            onChange={[Function]}
                            renderSuffix={[Function]}
                            required={true}
                            type="text"
                            value=""
                          >
                            <ForwardRef(InputBase)
                              classes={
                                Object {
                                  "adornedEnd": "MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd",
                                  "adornedStart": "MuiInputBase-adornedStart MuiOutlinedInput-adornedStart",
                                  "colorSecondary": "MuiInputBase-colorSecondary MuiOutlinedInput-colorSecondary",
                                  "disabled": "Mui-disabled Mui-disabled",
                                  "error": "Mui-error Mui-error",
                                  "focused": "Mui-focused Mui-focused",
                                  "formControl": "MuiInputBase-formControl",
                                  "fullWidth": "MuiInputBase-fullWidth",
                                  "input": "MuiInputBase-input MuiOutlinedInput-input",
                                  "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd",
                                  "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiOutlinedInput-inputAdornedStart",
                                  "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                  "inputMarginDense": "MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense",
                                  "inputMultiline": "MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline",
                                  "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                  "marginDense": "MuiInputBase-marginDense MuiOutlinedInput-marginDense",
                                  "multiline": "MuiInputBase-multiline MuiOutlinedInput-multiline",
                                  "root": "MuiInputBase-root MuiOutlinedInput-root",
                                }
                              }
                              data-testid="select-city"
                              fullWidth={false}
                              inputComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "propTypes": Object {
                                    "IconComponent": [Function],
                                    "MenuProps": [Function],
                                    "SelectDisplayProps": [Function],
                                    "aria-label": [Function],
                                    "autoFocus": [Function],
                                    "autoWidth": [Function],
                                    "children": [Function],
                                    "className": [Function],
                                    "classes": [Function],
                                    "defaultValue": [Function],
                                    "disabled": [Function],
                                    "displayEmpty": [Function],
                                    "inputRef": [Function],
                                    "labelId": [Function],
                                    "multiple": [Function],
                                    "name": [Function],
                                    "onBlur": [Function],
                                    "onChange": [Function],
                                    "onClose": [Function],
                                    "onFocus": [Function],
                                    "onOpen": [Function],
                                    "open": [Function],
                                    "readOnly": [Function],
                                    "renderValue": [Function],
                                    "tabIndex": [Function],
                                    "type": [Function],
                                    "value": [Function],
                                    "variant": [Function],
                                  },
                                  "render": [Function],
                                }
                              }
                              inputProps={
                                Object {
                                  "IconComponent": Object {
                                    "$$typeof": Symbol(react.memo),
                                    "compare": null,
                                    "type": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "render": [Function],
                                    },
                                  },
                                  "MenuProps": undefined,
                                  "SelectDisplayProps": Object {
                                    "id": "demo-simple-select",
                                  },
                                  "autoWidth": false,
                                  "children": Array [
                                    <ForwardRef(WithStyles(ForwardRef(MenuItem)))
                                      value="Bengaluru"
                                    >
                                      Bengaluru
                                    </ForwardRef(WithStyles(ForwardRef(MenuItem)))>,
                                    <ForwardRef(WithStyles(ForwardRef(MenuItem)))
                                      value="Gurgaon"
                                    >
                                      Gurgaon
                                    </ForwardRef(WithStyles(ForwardRef(MenuItem)))>,
                                    <ForwardRef(WithStyles(ForwardRef(MenuItem)))
                                      value="London"
                                    >
                                      London
                                    </ForwardRef(WithStyles(ForwardRef(MenuItem)))>,
                                    <ForwardRef(WithStyles(ForwardRef(MenuItem)))
                                      value="New York"
                                    >
                                      New York
                                    </ForwardRef(WithStyles(ForwardRef(MenuItem)))>,
                                  ],
                                  "classes": Object {
                                    "disabled": "Mui-disabled",
                                    "filled": "MuiSelect-filled",
                                    "icon": "MuiSelect-icon",
                                    "iconFilled": "MuiSelect-iconFilled",
                                    "iconOpen": "MuiSelect-iconOpen",
                                    "iconOutlined": "MuiSelect-iconOutlined",
                                    "nativeInput": "MuiSelect-nativeInput",
                                    "outlined": "MuiSelect-outlined",
                                    "root": "MuiSelect-root",
                                    "select": "MuiSelect-select",
                                    "selectMenu": "MuiSelect-selectMenu",
                                  },
                                  "displayEmpty": false,
                                  "labelId": "demo-simple-select-label",
                                  "multiple": false,
                                  "onClose": undefined,
                                  "onOpen": undefined,
                                  "open": undefined,
                                  "renderValue": undefined,
                                  "type": undefined,
                                  "variant": "outlined",
                                }
                              }
                              multiline={false}
                              onChange={[Function]}
                              renderSuffix={[Function]}
                              required={true}
                              type="text"
                              value=""
                            >
                              <div
                                className="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-formControl"
                                data-testid="select-city"
                                onClick={[Function]}
                                required={true}
                              >
                                <ForwardRef(SelectInput)
                                  IconComponent={
                                    Object {
                                      "$$typeof": Symbol(react.memo),
                                      "compare": null,
                                      "type": Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "render": [Function],
                                      },
                                    }
                                  }
                                  SelectDisplayProps={
                                    Object {
                                      "id": "demo-simple-select",
                                    }
                                  }
                                  aria-invalid={false}
                                  autoWidth={false}
                                  className="MuiInputBase-input MuiOutlinedInput-input"
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "filled": "MuiSelect-filled",
                                      "icon": "MuiSelect-icon",
                                      "iconFilled": "MuiSelect-iconFilled",
                                      "iconOpen": "MuiSelect-iconOpen",
                                      "iconOutlined": "MuiSelect-iconOutlined",
                                      "nativeInput": "MuiSelect-nativeInput",
                                      "outlined": "MuiSelect-outlined",
                                      "root": "MuiSelect-root",
                                      "select": "MuiSelect-select",
                                      "selectMenu": "MuiSelect-selectMenu",
                                    }
                                  }
                                  disabled={false}
                                  displayEmpty={false}
                                  inputRef={[Function]}
                                  labelId="demo-simple-select-label"
                                  multiple={false}
                                  onAnimationStart={[Function]}
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  required={true}
                                  value=""
                                  variant="outlined"
                                >
                                  <div
                                    aria-haspopup="listbox"
                                    aria-labelledby="demo-simple-select-label demo-simple-select"
                                    className="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-outlined MuiInputBase-input MuiOutlinedInput-input"
                                    id="demo-simple-select"
                                    onBlur={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onMouseDown={[Function]}
                                    role="button"
                                    tabIndex={0}
                                  >
                                    <span
                                      dangerouslySetInnerHTML={
                                        Object {
                                          "__html": "&#8203;",
                                        }
                                      }
                                    />
                                  </div>
                                  <input
                                    aria-hidden={true}
                                    className="MuiSelect-nativeInput"
                                    onAnimationStart={[Function]}
                                    onChange={[Function]}
                                    required={true}
                                    tabIndex={-1}
                                    value=""
                                  />
                                  <ForwardRef(ArrowDropDownIcon)
                                    className="MuiSelect-icon MuiSelect-iconOutlined"
                                  >
                                    <WithStyles(ForwardRef(SvgIcon))
                                      className="MuiSelect-icon MuiSelect-iconOutlined"
                                    >
                                      <ForwardRef(SvgIcon)
                                        className="MuiSelect-icon MuiSelect-iconOutlined"
                                        classes={
                                          Object {
                                            "colorAction": "MuiSvgIcon-colorAction",
                                            "colorDisabled": "MuiSvgIcon-colorDisabled",
                                            "colorError": "MuiSvgIcon-colorError",
                                            "colorPrimary": "MuiSvgIcon-colorPrimary",
                                            "colorSecondary": "MuiSvgIcon-colorSecondary",
                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                            "root": "MuiSvgIcon-root",
                                          }
                                        }
                                      >
                                        <svg
                                          aria-hidden={true}
                                          className="MuiSvgIcon-root MuiSelect-icon MuiSelect-iconOutlined"
                                          focusable="false"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M7 10l5 5 5-5z"
                                          />
                                        </svg>
                                      </ForwardRef(SvgIcon)>
                                    </WithStyles(ForwardRef(SvgIcon))>
                                  </ForwardRef(ArrowDropDownIcon)>
                                  <WithStyles(ForwardRef(Menu))
                                    MenuListProps={
                                      Object {
                                        "aria-labelledby": "demo-simple-select-label",
                                        "disableListWrap": true,
                                        "role": "listbox",
                                      }
                                    }
                                    PaperProps={
                                      Object {
                                        "style": Object {
                                          "minWidth": undefined,
                                        },
                                      }
                                    }
                                    anchorEl={
                                      <div
                                        aria-haspopup="listbox"
                                        aria-labelledby="demo-simple-select-label demo-simple-select"
                                        class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-outlined MuiInputBase-input MuiOutlinedInput-input"
                                        id="demo-simple-select"
                                        role="button"
                                        tabindex="0"
                                      >
                                        <span>
                                          ​
                                        </span>
                                      </div>
                                    }
                                    id="menu-"
                                    onClose={[Function]}
                                    open={false}
                                  >
                                    <ForwardRef(Menu)
                                      MenuListProps={
                                        Object {
                                          "aria-labelledby": "demo-simple-select-label",
                                          "disableListWrap": true,
                                          "role": "listbox",
                                        }
                                      }
                                      PaperProps={
                                        Object {
                                          "style": Object {
                                            "minWidth": undefined,
                                          },
                                        }
                                      }
                                      anchorEl={
                                        <div
                                          aria-haspopup="listbox"
                                          aria-labelledby="demo-simple-select-label demo-simple-select"
                                          class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-outlined MuiInputBase-input MuiOutlinedInput-input"
                                          id="demo-simple-select"
                                          role="button"
                                          tabindex="0"
                                        >
                                          <span>
                                            ​
                                          </span>
                                        </div>
                                      }
                                      classes={
                                        Object {
                                          "list": "MuiMenu-list",
                                          "paper": "MuiMenu-paper",
                                        }
                                      }
                                      id="menu-"
                                      onClose={[Function]}
                                      open={false}
                                    >
                                      <WithStyles(ForwardRef(Popover))
                                        PaperProps={
                                          Object {
                                            "classes": Object {
                                              "root": "MuiMenu-paper",
                                            },
                                            "style": Object {
                                              "minWidth": undefined,
                                            },
                                          }
                                        }
                                        anchorEl={
                                          <div
                                            aria-haspopup="listbox"
                                            aria-labelledby="demo-simple-select-label demo-simple-select"
                                            class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-outlined MuiInputBase-input MuiOutlinedInput-input"
                                            id="demo-simple-select"
                                            role="button"
                                            tabindex="0"
                                          >
                                            <span>
                                              ​
                                            </span>
                                          </div>
                                        }
                                        anchorOrigin={
                                          Object {
                                            "horizontal": "left",
                                            "vertical": "top",
                                          }
                                        }
                                        getContentAnchorEl={[Function]}
                                        id="menu-"
                                        onClose={[Function]}
                                        onEntering={[Function]}
                                        open={false}
                                        transformOrigin={
                                          Object {
                                            "horizontal": "left",
                                            "vertical": "top",
                                          }
                                        }
                                        transitionDuration="auto"
                                      >
                                        <ForwardRef(Popover)
                                          PaperProps={
                                            Object {
                                              "classes": Object {
                                                "root": "MuiMenu-paper",
                                              },
                                              "style": Object {
                                                "minWidth": undefined,
                                              },
                                            }
                                          }
                                          anchorEl={
                                            <div
                                              aria-haspopup="listbox"
                                              aria-labelledby="demo-simple-select-label demo-simple-select"
                                              class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-outlined MuiInputBase-input MuiOutlinedInput-input"
                                              id="demo-simple-select"
                                              role="button"
                                              tabindex="0"
                                            >
                                              <span>
                                                ​
                                              </span>
                                            </div>
                                          }
                                          anchorOrigin={
                                            Object {
                                              "horizontal": "left",
                                              "vertical": "top",
                                            }
                                          }
                                          classes={
                                            Object {
                                              "paper": "MuiPopover-paper",
                                              "root": "MuiPopover-root",
                                            }
                                          }
                                          getContentAnchorEl={[Function]}
                                          id="menu-"
                                          onClose={[Function]}
                                          onEntering={[Function]}
                                          open={false}
                                          transformOrigin={
                                            Object {
                                              "horizontal": "left",
                                              "vertical": "top",
                                            }
                                          }
                                          transitionDuration="auto"
                                        >
                                          <ForwardRef(Modal)
                                            BackdropProps={
                                              Object {
                                                "invisible": true,
                                              }
                                            }
                                            className="MuiPopover-root"
                                            container={<body />}
                                            id="menu-"
                                            onClose={[Function]}
                                            open={false}
                                          />
                                        </ForwardRef(Popover)>
                                      </WithStyles(ForwardRef(Popover))>
                                    </ForwardRef(Menu)>
                                  </WithStyles(ForwardRef(Menu))>
                                </ForwardRef(SelectInput)>
                                <WithStyles(ForwardRef(NotchedOutline))
                                  className="MuiOutlinedInput-notchedOutline"
                                  labelWidth={0}
                                  notched={false}
                                >
                                  <ForwardRef(NotchedOutline)
                                    className="MuiOutlinedInput-notchedOutline"
                                    classes={
                                      Object {
                                        "legend": "PrivateNotchedOutline-legend-4",
                                        "legendLabelled": "PrivateNotchedOutline-legendLabelled-5",
                                        "legendNotched": "PrivateNotchedOutline-legendNotched-6",
                                        "root": "PrivateNotchedOutline-root-3",
                                      }
                                    }
                                    labelWidth={0}
                                    notched={false}
                                  >
                                    <fieldset
                                      aria-hidden={true}
                                      className="PrivateNotchedOutline-root-3 MuiOutlinedInput-notchedOutline"
                                      style={
                                        Object {
                                          "paddingLeft": 8,
                                        }
                                      }
                                    >
                                      <legend
                                        className="PrivateNotchedOutline-legend-4"
                                        style={
                                          Object {
                                            "width": 0.01,
                                          }
                                        }
                                      >
                                        <span
                                          dangerouslySetInnerHTML={
                                            Object {
                                              "__html": "&#8203;",
                                            }
                                          }
                                        />
                                      </legend>
                                    </fieldset>
                                  </ForwardRef(NotchedOutline)>
                                </WithStyles(ForwardRef(NotchedOutline))>
                              </div>
                            </ForwardRef(InputBase)>
                          </WithStyles(ForwardRef(InputBase))>
                        </ForwardRef(OutlinedInput)>
                      </WithStyles(ForwardRef(OutlinedInput))>
                    </ForwardRef(Select)>
                  </WithStyles(ForwardRef(Select))>
                </div>
              </ForwardRef(FormControl)>
            </WithStyles(ForwardRef(FormControl))>
            <WithStyles(ForwardRef(FormControl))
              component="fieldset"
            >
              <ForwardRef(FormControl)
                classes={
                  Object {
                    "fullWidth": "MuiFormControl-fullWidth",
                    "marginDense": "MuiFormControl-marginDense",
                    "marginNormal": "MuiFormControl-marginNormal",
                    "root": "MuiFormControl-root",
                  }
                }
                component="fieldset"
              >
                <fieldset
                  className="MuiFormControl-root"
                >
                  <ForwardRef(RadioGroup)
                    aria-label="unit"
                    defaultValue=""
                    name="unit"
                    onChange={[Function]}
                    row={true}
                  >
                    <WithStyles(ForwardRef(FormGroup))
                      aria-label="unit"
                      defaultValue=""
                      role="radiogroup"
                      row={true}
                    >
                      <ForwardRef(FormGroup)
                        aria-label="unit"
                        classes={
                          Object {
                            "root": "MuiFormGroup-root",
                            "row": "MuiFormGroup-row",
                          }
                        }
                        defaultValue=""
                        role="radiogroup"
                        row={true}
                      >
                        <div
                          aria-label="unit"
                          className="MuiFormGroup-root MuiFormGroup-row"
                          defaultValue=""
                          role="radiogroup"
                        >
                          <WithStyles(ForwardRef(FormControlLabel))
                            control={
                              <ForwardRef(WithStyles(ForwardRef(Radio)))
                                color="primary"
                              />
                            }
                            label="Celcius"
                            value="metric"
                          >
                            <ForwardRef(FormControlLabel)
                              classes={
                                Object {
                                  "disabled": "Mui-disabled",
                                  "label": "MuiFormControlLabel-label",
                                  "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                                  "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                                  "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                                  "root": "MuiFormControlLabel-root",
                                }
                              }
                              control={
                                <ForwardRef(WithStyles(ForwardRef(Radio)))
                                  color="primary"
                                />
                              }
                              label="Celcius"
                              value="metric"
                            >
                              <label
                                className="MuiFormControlLabel-root"
                              >
                                <WithStyles(ForwardRef(Radio))
                                  color="primary"
                                  disabled={false}
                                  value="metric"
                                >
                                  <ForwardRef(Radio)
                                    classes={
                                      Object {
                                        "checked": "Mui-checked",
                                        "colorPrimary": "MuiRadio-colorPrimary",
                                        "colorSecondary": "MuiRadio-colorSecondary",
                                        "disabled": "Mui-disabled",
                                        "root": "MuiRadio-root",
                                      }
                                    }
                                    color="primary"
                                    disabled={false}
                                    value="metric"
                                  >
                                    <WithStyles(ForwardRef(SwitchBase))
                                      checked={false}
                                      checkedIcon={
                                        <ForwardRef(WithStyles(RadioButtonIcon))
                                          checked={true}
                                          fontSize="default"
                                        />
                                      }
                                      classes={
                                        Object {
                                          "checked": "Mui-checked",
                                          "disabled": "Mui-disabled",
                                          "root": "MuiRadio-root MuiRadio-colorPrimary",
                                        }
                                      }
                                      color="primary"
                                      disabled={false}
                                      icon={
                                        <ForwardRef(WithStyles(RadioButtonIcon))
                                          fontSize="default"
                                        />
                                      }
                                      name="unit"
                                      onChange={[Function]}
                                      type="radio"
                                      value="metric"
                                    >
                                      <ForwardRef(SwitchBase)
                                        checked={false}
                                        checkedIcon={
                                          <ForwardRef(WithStyles(RadioButtonIcon))
                                            checked={true}
                                            fontSize="default"
                                          />
                                        }
                                        classes={
                                          Object {
                                            "checked": "PrivateSwitchBase-checked-8 Mui-checked",
                                            "disabled": "PrivateSwitchBase-disabled-9 Mui-disabled",
                                            "input": "PrivateSwitchBase-input-10",
                                            "root": "PrivateSwitchBase-root-7 MuiRadio-root MuiRadio-colorPrimary",
                                          }
                                        }
                                        color="primary"
                                        disabled={false}
                                        icon={
                                          <ForwardRef(WithStyles(RadioButtonIcon))
                                            fontSize="default"
                                          />
                                        }
                                        name="unit"
                                        onChange={[Function]}
                                        type="radio"
                                        value="metric"
                                      >
                                        <WithStyles(ForwardRef(IconButton))
                                          className="PrivateSwitchBase-root-7 MuiRadio-root MuiRadio-colorPrimary"
                                          color="primary"
                                          component="span"
                                          disabled={false}
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          tabIndex={null}
                                        >
                                          <ForwardRef(IconButton)
                                            className="PrivateSwitchBase-root-7 MuiRadio-root MuiRadio-colorPrimary"
                                            classes={
                                              Object {
                                                "colorInherit": "MuiIconButton-colorInherit",
                                                "colorPrimary": "MuiIconButton-colorPrimary",
                                                "colorSecondary": "MuiIconButton-colorSecondary",
                                                "disabled": "Mui-disabled",
                                                "edgeEnd": "MuiIconButton-edgeEnd",
                                                "edgeStart": "MuiIconButton-edgeStart",
                                                "label": "MuiIconButton-label",
                                                "root": "MuiIconButton-root",
                                                "sizeSmall": "MuiIconButton-sizeSmall",
                                              }
                                            }
                                            color="primary"
                                            component="span"
                                            disabled={false}
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            tabIndex={null}
                                          >
                                            <WithStyles(ForwardRef(ButtonBase))
                                              centerRipple={true}
                                              className="MuiIconButton-root PrivateSwitchBase-root-7 MuiRadio-root MuiRadio-colorPrimary MuiIconButton-colorPrimary"
                                              component="span"
                                              disabled={false}
                                              focusRipple={true}
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                              tabIndex={null}
                                            >
                                              <ForwardRef(ButtonBase)
                                                centerRipple={true}
                                                className="MuiIconButton-root PrivateSwitchBase-root-7 MuiRadio-root MuiRadio-colorPrimary MuiIconButton-colorPrimary"
                                                classes={
                                                  Object {
                                                    "disabled": "Mui-disabled",
                                                    "focusVisible": "Mui-focusVisible",
                                                    "root": "MuiButtonBase-root",
                                                  }
                                                }
                                                component="span"
                                                disabled={false}
                                                focusRipple={true}
                                                onBlur={[Function]}
                                                onFocus={[Function]}
                                                tabIndex={null}
                                              >
                                                <span
                                                  aria-disabled={false}
                                                  className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-7 MuiRadio-root MuiRadio-colorPrimary MuiIconButton-colorPrimary"
                                                  onBlur={[Function]}
                                                  onDragLeave={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyUp={[Function]}
                                                  onMouseDown={[Function]}
                                                  onMouseLeave={[Function]}
                                                  onMouseUp={[Function]}
                                                  onTouchEnd={[Function]}
                                                  onTouchMove={[Function]}
                                                  onTouchStart={[Function]}
                                                  tabIndex={null}
                                                >
                                                  <span
                                                    className="MuiIconButton-label"
                                                  >
                                                    <input
                                                      checked={false}
                                                      className="PrivateSwitchBase-input-10"
                                                      disabled={false}
                                                      name="unit"
                                                      onChange={[Function]}
                                                      type="radio"
                                                      value="metric"
                                                    />
                                                    <WithStyles(RadioButtonIcon)
                                                      fontSize="default"
                                                    >
                                                      <RadioButtonIcon
                                                        classes={
                                                          Object {
                                                            "checked": "PrivateRadioButtonIcon-checked-13",
                                                            "layer": "PrivateRadioButtonIcon-layer-12",
                                                            "root": "PrivateRadioButtonIcon-root-11",
                                                          }
                                                        }
                                                        fontSize="default"
                                                      >
                                                        <div
                                                          className="PrivateRadioButtonIcon-root-11"
                                                        >
                                                          <ForwardRef(RadioButtonUncheckedIcon)
                                                            fontSize="default"
                                                          >
                                                            <WithStyles(ForwardRef(SvgIcon))
                                                              fontSize="default"
                                                            >
                                                              <ForwardRef(SvgIcon)
                                                                classes={
                                                                  Object {
                                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                    "colorError": "MuiSvgIcon-colorError",
                                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                    "root": "MuiSvgIcon-root",
                                                                  }
                                                                }
                                                                fontSize="default"
                                                              >
                                                                <svg
                                                                  aria-hidden={true}
                                                                  className="MuiSvgIcon-root"
                                                                  focusable="false"
                                                                  viewBox="0 0 24 24"
                                                                >
                                                                  <path
                                                                    d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
                                                                  />
                                                                </svg>
                                                              </ForwardRef(SvgIcon)>
                                                            </WithStyles(ForwardRef(SvgIcon))>
                                                          </ForwardRef(RadioButtonUncheckedIcon)>
                                                          <ForwardRef(RadioButtonCheckedIcon)
                                                            className="PrivateRadioButtonIcon-layer-12"
                                                            fontSize="default"
                                                          >
                                                            <WithStyles(ForwardRef(SvgIcon))
                                                              className="PrivateRadioButtonIcon-layer-12"
                                                              fontSize="default"
                                                            >
                                                              <ForwardRef(SvgIcon)
                                                                className="PrivateRadioButtonIcon-layer-12"
                                                                classes={
                                                                  Object {
                                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                    "colorError": "MuiSvgIcon-colorError",
                                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                    "root": "MuiSvgIcon-root",
                                                                  }
                                                                }
                                                                fontSize="default"
                                                              >
                                                                <svg
                                                                  aria-hidden={true}
                                                                  className="MuiSvgIcon-root PrivateRadioButtonIcon-layer-12"
                                                                  focusable="false"
                                                                  viewBox="0 0 24 24"
                                                                >
                                                                  <path
                                                                    d="M8.465 8.465C9.37 7.56 10.62 7 12 7C14.76 7 17 9.24 17 12C17 13.38 16.44 14.63 15.535 15.535C14.63 16.44 13.38 17 12 17C9.24 17 7 14.76 7 12C7 10.62 7.56 9.37 8.465 8.465Z"
                                                                  />
                                                                </svg>
                                                              </ForwardRef(SvgIcon)>
                                                            </WithStyles(ForwardRef(SvgIcon))>
                                                          </ForwardRef(RadioButtonCheckedIcon)>
                                                        </div>
                                                      </RadioButtonIcon>
                                                    </WithStyles(RadioButtonIcon)>
                                                  </span>
                                                  <WithStyles(memo)
                                                    center={true}
                                                  >
                                                    <ForwardRef(TouchRipple)
                                                      center={true}
                                                      classes={
                                                        Object {
                                                          "child": "MuiTouchRipple-child",
                                                          "childLeaving": "MuiTouchRipple-childLeaving",
                                                          "childPulsate": "MuiTouchRipple-childPulsate",
                                                          "ripple": "MuiTouchRipple-ripple",
                                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                          "root": "MuiTouchRipple-root",
                                                        }
                                                      }
                                                    >
                                                      <span
                                                        className="MuiTouchRipple-root"
                                                      >
                                                        <TransitionGroup
                                                          childFactory={[Function]}
                                                          component={null}
                                                          exit={true}
                                                        />
                                                      </span>
                                                    </ForwardRef(TouchRipple)>
                                                  </WithStyles(memo)>
                                                </span>
                                              </ForwardRef(ButtonBase)>
                                            </WithStyles(ForwardRef(ButtonBase))>
                                          </ForwardRef(IconButton)>
                                        </WithStyles(ForwardRef(IconButton))>
                                      </ForwardRef(SwitchBase)>
                                    </WithStyles(ForwardRef(SwitchBase))>
                                  </ForwardRef(Radio)>
                                </WithStyles(ForwardRef(Radio))>
                                <WithStyles(ForwardRef(Typography))
                                  className="MuiFormControlLabel-label"
                                  component="span"
                                >
                                  <ForwardRef(Typography)
                                    className="MuiFormControlLabel-label"
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTypography-alignCenter",
                                        "alignJustify": "MuiTypography-alignJustify",
                                        "alignLeft": "MuiTypography-alignLeft",
                                        "alignRight": "MuiTypography-alignRight",
                                        "body1": "MuiTypography-body1",
                                        "body2": "MuiTypography-body2",
                                        "button": "MuiTypography-button",
                                        "caption": "MuiTypography-caption",
                                        "colorError": "MuiTypography-colorError",
                                        "colorInherit": "MuiTypography-colorInherit",
                                        "colorPrimary": "MuiTypography-colorPrimary",
                                        "colorSecondary": "MuiTypography-colorSecondary",
                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                        "displayBlock": "MuiTypography-displayBlock",
                                        "displayInline": "MuiTypography-displayInline",
                                        "gutterBottom": "MuiTypography-gutterBottom",
                                        "h1": "MuiTypography-h1",
                                        "h2": "MuiTypography-h2",
                                        "h3": "MuiTypography-h3",
                                        "h4": "MuiTypography-h4",
                                        "h5": "MuiTypography-h5",
                                        "h6": "MuiTypography-h6",
                                        "noWrap": "MuiTypography-noWrap",
                                        "overline": "MuiTypography-overline",
                                        "paragraph": "MuiTypography-paragraph",
                                        "root": "MuiTypography-root",
                                        "srOnly": "MuiTypography-srOnly",
                                        "subtitle1": "MuiTypography-subtitle1",
                                        "subtitle2": "MuiTypography-subtitle2",
                                      }
                                    }
                                    component="span"
                                  >
                                    <span
                                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                    >
                                      Celcius
                                    </span>
                                  </ForwardRef(Typography)>
                                </WithStyles(ForwardRef(Typography))>
                              </label>
                            </ForwardRef(FormControlLabel)>
                          </WithStyles(ForwardRef(FormControlLabel))>
                          <WithStyles(ForwardRef(FormControlLabel))
                            control={
                              <ForwardRef(WithStyles(ForwardRef(Radio)))
                                color="primary"
                              />
                            }
                            label="Fahrenheit"
                            value="imperial"
                          >
                            <ForwardRef(FormControlLabel)
                              classes={
                                Object {
                                  "disabled": "Mui-disabled",
                                  "label": "MuiFormControlLabel-label",
                                  "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                                  "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                                  "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                                  "root": "MuiFormControlLabel-root",
                                }
                              }
                              control={
                                <ForwardRef(WithStyles(ForwardRef(Radio)))
                                  color="primary"
                                />
                              }
                              label="Fahrenheit"
                              value="imperial"
                            >
                              <label
                                className="MuiFormControlLabel-root"
                              >
                                <WithStyles(ForwardRef(Radio))
                                  color="primary"
                                  disabled={false}
                                  value="imperial"
                                >
                                  <ForwardRef(Radio)
                                    classes={
                                      Object {
                                        "checked": "Mui-checked",
                                        "colorPrimary": "MuiRadio-colorPrimary",
                                        "colorSecondary": "MuiRadio-colorSecondary",
                                        "disabled": "Mui-disabled",
                                        "root": "MuiRadio-root",
                                      }
                                    }
                                    color="primary"
                                    disabled={false}
                                    value="imperial"
                                  >
                                    <WithStyles(ForwardRef(SwitchBase))
                                      checked={false}
                                      checkedIcon={
                                        <ForwardRef(WithStyles(RadioButtonIcon))
                                          checked={true}
                                          fontSize="default"
                                        />
                                      }
                                      classes={
                                        Object {
                                          "checked": "Mui-checked",
                                          "disabled": "Mui-disabled",
                                          "root": "MuiRadio-root MuiRadio-colorPrimary",
                                        }
                                      }
                                      color="primary"
                                      disabled={false}
                                      icon={
                                        <ForwardRef(WithStyles(RadioButtonIcon))
                                          fontSize="default"
                                        />
                                      }
                                      name="unit"
                                      onChange={[Function]}
                                      type="radio"
                                      value="imperial"
                                    >
                                      <ForwardRef(SwitchBase)
                                        checked={false}
                                        checkedIcon={
                                          <ForwardRef(WithStyles(RadioButtonIcon))
                                            checked={true}
                                            fontSize="default"
                                          />
                                        }
                                        classes={
                                          Object {
                                            "checked": "PrivateSwitchBase-checked-8 Mui-checked",
                                            "disabled": "PrivateSwitchBase-disabled-9 Mui-disabled",
                                            "input": "PrivateSwitchBase-input-10",
                                            "root": "PrivateSwitchBase-root-7 MuiRadio-root MuiRadio-colorPrimary",
                                          }
                                        }
                                        color="primary"
                                        disabled={false}
                                        icon={
                                          <ForwardRef(WithStyles(RadioButtonIcon))
                                            fontSize="default"
                                          />
                                        }
                                        name="unit"
                                        onChange={[Function]}
                                        type="radio"
                                        value="imperial"
                                      >
                                        <WithStyles(ForwardRef(IconButton))
                                          className="PrivateSwitchBase-root-7 MuiRadio-root MuiRadio-colorPrimary"
                                          color="primary"
                                          component="span"
                                          disabled={false}
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          tabIndex={null}
                                        >
                                          <ForwardRef(IconButton)
                                            className="PrivateSwitchBase-root-7 MuiRadio-root MuiRadio-colorPrimary"
                                            classes={
                                              Object {
                                                "colorInherit": "MuiIconButton-colorInherit",
                                                "colorPrimary": "MuiIconButton-colorPrimary",
                                                "colorSecondary": "MuiIconButton-colorSecondary",
                                                "disabled": "Mui-disabled",
                                                "edgeEnd": "MuiIconButton-edgeEnd",
                                                "edgeStart": "MuiIconButton-edgeStart",
                                                "label": "MuiIconButton-label",
                                                "root": "MuiIconButton-root",
                                                "sizeSmall": "MuiIconButton-sizeSmall",
                                              }
                                            }
                                            color="primary"
                                            component="span"
                                            disabled={false}
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            tabIndex={null}
                                          >
                                            <WithStyles(ForwardRef(ButtonBase))
                                              centerRipple={true}
                                              className="MuiIconButton-root PrivateSwitchBase-root-7 MuiRadio-root MuiRadio-colorPrimary MuiIconButton-colorPrimary"
                                              component="span"
                                              disabled={false}
                                              focusRipple={true}
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                              tabIndex={null}
                                            >
                                              <ForwardRef(ButtonBase)
                                                centerRipple={true}
                                                className="MuiIconButton-root PrivateSwitchBase-root-7 MuiRadio-root MuiRadio-colorPrimary MuiIconButton-colorPrimary"
                                                classes={
                                                  Object {
                                                    "disabled": "Mui-disabled",
                                                    "focusVisible": "Mui-focusVisible",
                                                    "root": "MuiButtonBase-root",
                                                  }
                                                }
                                                component="span"
                                                disabled={false}
                                                focusRipple={true}
                                                onBlur={[Function]}
                                                onFocus={[Function]}
                                                tabIndex={null}
                                              >
                                                <span
                                                  aria-disabled={false}
                                                  className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-7 MuiRadio-root MuiRadio-colorPrimary MuiIconButton-colorPrimary"
                                                  onBlur={[Function]}
                                                  onDragLeave={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyUp={[Function]}
                                                  onMouseDown={[Function]}
                                                  onMouseLeave={[Function]}
                                                  onMouseUp={[Function]}
                                                  onTouchEnd={[Function]}
                                                  onTouchMove={[Function]}
                                                  onTouchStart={[Function]}
                                                  tabIndex={null}
                                                >
                                                  <span
                                                    className="MuiIconButton-label"
                                                  >
                                                    <input
                                                      checked={false}
                                                      className="PrivateSwitchBase-input-10"
                                                      disabled={false}
                                                      name="unit"
                                                      onChange={[Function]}
                                                      type="radio"
                                                      value="imperial"
                                                    />
                                                    <WithStyles(RadioButtonIcon)
                                                      fontSize="default"
                                                    >
                                                      <RadioButtonIcon
                                                        classes={
                                                          Object {
                                                            "checked": "PrivateRadioButtonIcon-checked-13",
                                                            "layer": "PrivateRadioButtonIcon-layer-12",
                                                            "root": "PrivateRadioButtonIcon-root-11",
                                                          }
                                                        }
                                                        fontSize="default"
                                                      >
                                                        <div
                                                          className="PrivateRadioButtonIcon-root-11"
                                                        >
                                                          <ForwardRef(RadioButtonUncheckedIcon)
                                                            fontSize="default"
                                                          >
                                                            <WithStyles(ForwardRef(SvgIcon))
                                                              fontSize="default"
                                                            >
                                                              <ForwardRef(SvgIcon)
                                                                classes={
                                                                  Object {
                                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                    "colorError": "MuiSvgIcon-colorError",
                                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                    "root": "MuiSvgIcon-root",
                                                                  }
                                                                }
                                                                fontSize="default"
                                                              >
                                                                <svg
                                                                  aria-hidden={true}
                                                                  className="MuiSvgIcon-root"
                                                                  focusable="false"
                                                                  viewBox="0 0 24 24"
                                                                >
                                                                  <path
                                                                    d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
                                                                  />
                                                                </svg>
                                                              </ForwardRef(SvgIcon)>
                                                            </WithStyles(ForwardRef(SvgIcon))>
                                                          </ForwardRef(RadioButtonUncheckedIcon)>
                                                          <ForwardRef(RadioButtonCheckedIcon)
                                                            className="PrivateRadioButtonIcon-layer-12"
                                                            fontSize="default"
                                                          >
                                                            <WithStyles(ForwardRef(SvgIcon))
                                                              className="PrivateRadioButtonIcon-layer-12"
                                                              fontSize="default"
                                                            >
                                                              <ForwardRef(SvgIcon)
                                                                className="PrivateRadioButtonIcon-layer-12"
                                                                classes={
                                                                  Object {
                                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                    "colorError": "MuiSvgIcon-colorError",
                                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                    "root": "MuiSvgIcon-root",
                                                                  }
                                                                }
                                                                fontSize="default"
                                                              >
                                                                <svg
                                                                  aria-hidden={true}
                                                                  className="MuiSvgIcon-root PrivateRadioButtonIcon-layer-12"
                                                                  focusable="false"
                                                                  viewBox="0 0 24 24"
                                                                >
                                                                  <path
                                                                    d="M8.465 8.465C9.37 7.56 10.62 7 12 7C14.76 7 17 9.24 17 12C17 13.38 16.44 14.63 15.535 15.535C14.63 16.44 13.38 17 12 17C9.24 17 7 14.76 7 12C7 10.62 7.56 9.37 8.465 8.465Z"
                                                                  />
                                                                </svg>
                                                              </ForwardRef(SvgIcon)>
                                                            </WithStyles(ForwardRef(SvgIcon))>
                                                          </ForwardRef(RadioButtonCheckedIcon)>
                                                        </div>
                                                      </RadioButtonIcon>
                                                    </WithStyles(RadioButtonIcon)>
                                                  </span>
                                                  <WithStyles(memo)
                                                    center={true}
                                                  >
                                                    <ForwardRef(TouchRipple)
                                                      center={true}
                                                      classes={
                                                        Object {
                                                          "child": "MuiTouchRipple-child",
                                                          "childLeaving": "MuiTouchRipple-childLeaving",
                                                          "childPulsate": "MuiTouchRipple-childPulsate",
                                                          "ripple": "MuiTouchRipple-ripple",
                                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                          "root": "MuiTouchRipple-root",
                                                        }
                                                      }
                                                    >
                                                      <span
                                                        className="MuiTouchRipple-root"
                                                      >
                                                        <TransitionGroup
                                                          childFactory={[Function]}
                                                          component={null}
                                                          exit={true}
                                                        />
                                                      </span>
                                                    </ForwardRef(TouchRipple)>
                                                  </WithStyles(memo)>
                                                </span>
                                              </ForwardRef(ButtonBase)>
                                            </WithStyles(ForwardRef(ButtonBase))>
                                          </ForwardRef(IconButton)>
                                        </WithStyles(ForwardRef(IconButton))>
                                      </ForwardRef(SwitchBase)>
                                    </WithStyles(ForwardRef(SwitchBase))>
                                  </ForwardRef(Radio)>
                                </WithStyles(ForwardRef(Radio))>
                                <WithStyles(ForwardRef(Typography))
                                  className="MuiFormControlLabel-label"
                                  component="span"
                                >
                                  <ForwardRef(Typography)
                                    className="MuiFormControlLabel-label"
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTypography-alignCenter",
                                        "alignJustify": "MuiTypography-alignJustify",
                                        "alignLeft": "MuiTypography-alignLeft",
                                        "alignRight": "MuiTypography-alignRight",
                                        "body1": "MuiTypography-body1",
                                        "body2": "MuiTypography-body2",
                                        "button": "MuiTypography-button",
                                        "caption": "MuiTypography-caption",
                                        "colorError": "MuiTypography-colorError",
                                        "colorInherit": "MuiTypography-colorInherit",
                                        "colorPrimary": "MuiTypography-colorPrimary",
                                        "colorSecondary": "MuiTypography-colorSecondary",
                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                        "displayBlock": "MuiTypography-displayBlock",
                                        "displayInline": "MuiTypography-displayInline",
                                        "gutterBottom": "MuiTypography-gutterBottom",
                                        "h1": "MuiTypography-h1",
                                        "h2": "MuiTypography-h2",
                                        "h3": "MuiTypography-h3",
                                        "h4": "MuiTypography-h4",
                                        "h5": "MuiTypography-h5",
                                        "h6": "MuiTypography-h6",
                                        "noWrap": "MuiTypography-noWrap",
                                        "overline": "MuiTypography-overline",
                                        "paragraph": "MuiTypography-paragraph",
                                        "root": "MuiTypography-root",
                                        "srOnly": "MuiTypography-srOnly",
                                        "subtitle1": "MuiTypography-subtitle1",
                                        "subtitle2": "MuiTypography-subtitle2",
                                      }
                                    }
                                    component="span"
                                  >
                                    <span
                                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                    >
                                      Fahrenheit
                                    </span>
                                  </ForwardRef(Typography)>
                                </WithStyles(ForwardRef(Typography))>
                              </label>
                            </ForwardRef(FormControlLabel)>
                          </WithStyles(ForwardRef(FormControlLabel))>
                        </div>
                      </ForwardRef(FormGroup)>
                    </WithStyles(ForwardRef(FormGroup))>
                  </ForwardRef(RadioGroup)>
                </fieldset>
              </ForwardRef(FormControl)>
            </WithStyles(ForwardRef(FormControl))>
            <WithStyles(ForwardRef(Button))
              color="primary"
              disabled={true}
              onClick={[Function]}
              variant="contained"
            >
              <ForwardRef(Button)
                classes={
                  Object {
                    "colorInherit": "MuiButton-colorInherit",
                    "contained": "MuiButton-contained",
                    "containedPrimary": "MuiButton-containedPrimary",
                    "containedSecondary": "MuiButton-containedSecondary",
                    "containedSizeLarge": "MuiButton-containedSizeLarge",
                    "containedSizeSmall": "MuiButton-containedSizeSmall",
                    "disableElevation": "MuiButton-disableElevation",
                    "disabled": "Mui-disabled",
                    "endIcon": "MuiButton-endIcon",
                    "focusVisible": "Mui-focusVisible",
                    "fullWidth": "MuiButton-fullWidth",
                    "iconSizeLarge": "MuiButton-iconSizeLarge",
                    "iconSizeMedium": "MuiButton-iconSizeMedium",
                    "iconSizeSmall": "MuiButton-iconSizeSmall",
                    "label": "MuiButton-label",
                    "outlined": "MuiButton-outlined",
                    "outlinedPrimary": "MuiButton-outlinedPrimary",
                    "outlinedSecondary": "MuiButton-outlinedSecondary",
                    "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                    "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                    "root": "MuiButton-root",
                    "sizeLarge": "MuiButton-sizeLarge",
                    "sizeSmall": "MuiButton-sizeSmall",
                    "startIcon": "MuiButton-startIcon",
                    "text": "MuiButton-text",
                    "textPrimary": "MuiButton-textPrimary",
                    "textSecondary": "MuiButton-textSecondary",
                    "textSizeLarge": "MuiButton-textSizeLarge",
                    "textSizeSmall": "MuiButton-textSizeSmall",
                  }
                }
                color="primary"
                disabled={true}
                onClick={[Function]}
                variant="contained"
              >
                <WithStyles(ForwardRef(ButtonBase))
                  className="MuiButton-root MuiButton-contained MuiButton-containedPrimary Mui-disabled"
                  component="button"
                  disabled={true}
                  focusRipple={true}
                  focusVisibleClassName="Mui-focusVisible"
                  onClick={[Function]}
                  type="button"
                >
                  <ForwardRef(ButtonBase)
                    className="MuiButton-root MuiButton-contained MuiButton-containedPrimary Mui-disabled"
                    classes={
                      Object {
                        "disabled": "Mui-disabled",
                        "focusVisible": "Mui-focusVisible",
                        "root": "MuiButtonBase-root",
                      }
                    }
                    component="button"
                    disabled={true}
                    focusRipple={true}
                    focusVisibleClassName="Mui-focusVisible"
                    onClick={[Function]}
                    type="button"
                  >
                    <button
                      className="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary Mui-disabled Mui-disabled"
                      disabled={true}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onDragLeave={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                      onTouchEnd={[Function]}
                      onTouchMove={[Function]}
                      onTouchStart={[Function]}
                      tabIndex={-1}
                      type="button"
                    >
                      <span
                        className="MuiButton-label"
                      >
                        Get Forecast
                      </span>
                    </button>
                  </ForwardRef(ButtonBase)>
                </WithStyles(ForwardRef(ButtonBase))>
              </ForwardRef(Button)>
            </WithStyles(ForwardRef(Button))>
          </div>
        </ForwardRef(Grid)>
      </WithStyles(ForwardRef(Grid))>
    </Home>
  </Provider>
</ReduxWrapper>
`;
